= Build and Install WalB

== Requirements

=== Target system

* Architecture: x86_64
** Currently x86_32 is not supported.
* Linux kernel version: 3.2 or later.
** Tested with up to 3.8.

Tested Linux distribution: Ubuntu Linux Server 12.04.

=== Build tools

* Tools required to build linux kernel.
** gcc (tested with version 4.6.3 and 4.7.2)
** make
** ...

== Build kernel module

Prepare a build environment.
* Get Linux kernel source or header and install it.
** For Ubuntu, ex. {{{apt-get install linux-headers-3.2.0-40-generic}}}.

Build the module.
{{{
> cd walb.git/module
> make
}}}

You will get {{{walb-mod.ko}}} file.
Specify {{{KERNELDIR}}} option directly to specify kernel version.
For Ubuntu, ex.
{{{
> make KERNELDIR=/usr/src/linux-headers-3.2.0-40-generic
}}}

You can specify the following make options:
* {{{DEBUG=1}}}: debug build. ASSERT() will be enabled (a wrapper of BUG_ON()).
* {{{DYNAMIC_DEBUG=1}}}: for pr_debug().
* {{{OVERLAP=0}}}: disable overlapped IO serialization.
* {{{FAST_ALG=0}}}: use easy algorithm instead fast.
* {{{ASSERT=1}}}: enable ASSERT() even with release build {{{DEBUG=0}}}.

== Build userland tools

Build the control tool.
{{{
> cd walb.git/tool
> make
}}}

You will get {{{walbctl}}} executable file.
Specify {{{DEBUG=1}}} for debug build.

Run tests:
{{{
> cd walb.git/tool
> make test
}}}
You must build them with {{{DEBUG=1}}} before running tests.

== Test and prototype tools

* {{{module/test/*}}}: test code for kernel components.
* {{{module/proto/*}}}: prototype modules.
* {{{tool/test/*}}}: test code for userland components.

== Install

Replace {{{KERNELDIR}}} to your kernel source/header directory
and {{{KERNELVER}}} to your kernel version like {{{3.2.0}}}.

Install the module.
{{{
> mkdir -p /lib/module/KERNELVER/kernel/drivers/block/walb
> cp -p walb.git/module/walb-mod.ko /lib/module/KERNELVER/kernel/drivers/block/walb/
> depmod KERNELVER
}}}

Install the tool.
Copy {{{walbctl}}} executable to a directory that are in the search path.
{{{
> cp -p walb.git/tool/walbctl /usr/local/sbin/
}}}

-----
